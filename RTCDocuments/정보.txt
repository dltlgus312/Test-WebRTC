기술 개발 그룹
	WebRTC는 Google에서 착안하여 Mozilla 및 Opera에서 지원하는 오픈 소스 프로젝트다.
	API와 기본 프로토콜에 대해선 W3C와 IETF에서 공동으로 개발 중이다.


라이선스 (유, 무료)
	표준 (BSD) 오픈 소스 저작권 라이센스를 사용

	저작권자 표기. BSD 라이선스가 걸린 소프트웨어를 이용하는 경우, 
	해당 저작권자의 이름과 BSD 라이선스의 내용을 같이 배포해야 한다.

getMedia 의 리턴 타입은 Promise 다.

webrtc 자체적 구현에 따른 라이브러리는 필요없다. ( 내장객체 ) 하지만 Signaling 을 위한 매개서버 는 필수다.

WebRtc P2P 연결시 STUN ( NAT 공인 IP, PORT를 얻어내는 기술 ) ( Session Traversal Utilities for NAT )
TURN ( P2P 연결이 안되는 환경일때 [ 방화벽 ] 트래픽을 중계하는.. ) 을 활용하는 
ICE ( STUN, TURN 등의 기술을 종합 활용하여 라우팅 경로를 찾아내는 기술 : 연결 후보 중 가장 적은비용의 연결을 확립한다. )
의 사용은 불가피하다.


턴(TURN)은 Traversal Using Relays around NAT의 약자로 피어(Peer)가 방화벽 또는 프록시 뒤에 위치하여 직접 연결을 
실패하게 되면 피어(Peer)들 사이의 오디오/비디오/데이터 스트리밍 데이터를 중계해주는 역할을 합니다.
턴(TURN)서버는 공용 주소를 가지고 있어 피어(Peer)가 방화벽 또는 프록시 뒤에 위치하더라도 접속 할 수 있어
WebRTC의 P2P연결 실패 시 대안으로 사용이 됩니다. 턴(TURN)서버는 기본적으로 스턴(STUN)서버 역할을 제공하고 있습니다.


SDP( Session Description Protocol ) : 해상도나 가용한 코덱 정보 등의 로컬 미디어 상태들을 알아냅니다. 이것은 제안/응답 메커니즘에서 사용되는 메타데이터입니다.
CANDIDATE : 후보들로 알려진 어플리케이션 호스트의 잠재적인 네트워크 주소들을 가져옵니다.
	     통신을 위해서 ICE 를 이용하여 각종 네트워크 연결에대한 후보들을 전송 ( Private Network, FireWall, DMZ 관련 ) ( 각 후보들은 개별적으로 전송된다. )


getUserMedia : 사용자 단말기의 미디어 장치를 액세스할 수 있는 방법을 제공한다. 미디어 장치라 함은 마이크와 웹캠을 의미한다.
getUserMedia 를 통해 미디어 장치를 액세스 하게 되면 미디어 스트림 객체를 얻을 수 있으며 이를 PeerConnection 에 전달하여 
미디어 스트림을 전송하게 된다.

PeerConnection : 가장 중요한 API 이면서 Peer 간의 화상과 음성 등을 교환하기 위한 거의 모든 작업을 수행하는 API 이다.
 기본적인 기능은 Singal Processing, Security, 비디오 encode/decode, 네트워크와 관련된 NAT Traversal, Packet send/receive, 
bandwidth estimation 등이 있다.

DataChannel : Peer 간에 텍스트나 파일을 주고 받을 수 있는 메시징 API 이다. 설정에 따라 SCTP 또는 RTP 로 전송할 수 있다.
DataChannel 은 WebSocket 과 같은 수준의 API 를 제공하며 이는 Row Level API 라 할 수 있다. 대용량 파일을 주고받기 위해서는
이 API 를 활용한 어플리케이션 단의 테크닉이 필요하다.

RTCDataChannel
오디오와 비디오처럼, WebRTC는 실시간으로 다른 형태의 데이터 통신도 지원합니다. 
RTCDataChannel API는 피어와 피어간 임의의 데이터 교환을 빠른 반응속도와 높은 처리량으로 가능하게 합니다.
이 API를 이용하여 게임이나 원격 데스크탑 어플리케이션, 
실시간 채팅, 파일 전송, 분산 네트워크 등으로의 응용이 가능합니다.

RTCDataChannel API는 RTCPeerConnection의 대부분의 기능들을 활용하여 강력하고
유연한 P2P통신을 가능하게 하는 몇가지 기능을 가지고 있으며 통신은 브라우저간 직접 연결됩니다
그래서 RTCDataChannel은 WebSocket보다 매우 빠릅니다. 심지어 방화벽과 NAT의 방해로 '구멍내기'가 
실패하여 중계(TURN) 서버와 연결이 되더라도 빠릅니다.

(getUserMedia라고도 하는) MediaStream - 카메라/마이크 등 데이터 스트림 접근
RTCPeerConnection - 암호화 및 대역폭 관리 및 오디오 또는 비디오 연결
RTCDataChannel - 일반적인 데이터 P2P통신

말그대로 WebRTC는 웹을 위한 실시간 통신 규격입니다.
이는 오디오나 비디오 스트림을 P2P로 송수신하는 것뿐만이 아니라 데이터 전달을 위한 메커니즘을 포함하고 있습니다.

RTP/SRTP
  - UDP를 이용한 멀티미디어 데이터 전송 spec, 보안을 위해서 WebRTC에서는 SRTP(Secure RTP)를 사용함. (음성 및 비디오 등)

API 정보
RTC Multi Connection (무아즈칸)
- 슬라이드 및 파일 업로드-동기화

	RtcMultiConnection
	라이센스 : MIT 라이센스 

	이 소프트웨어를 누구라도 무상으로 제한없이 취급해도 좋다. 단, 저작권 표시 및 이 허가 표시를 소프트웨어의 모든 복제물 또는 중요한 부분에 기재해야 한다.
	저자 또는 저작권자는 소프트웨어에 관해서 아무런 책임을 지지 않는다.

	파일업로드 & chat 예제 : https://rtcmulticonnection.herokuapp.com/demos/file-sharing.html#5835252690637405

필수 - 시그널링 서버, 위치만 잡아줄때... 
- 적합한 솔루션 선정, 유/무료


필수 - 턴 서버(방화벽) 트윌리오 twilio / 유료

	가격은 중계 미디어의 기가 바이트 당 기준이며, 유사한 서비스를 직접 제작하는 것보다 훨씬 비용 효율적입니다. == (도쿄서버) 기가 바이트 당  0.6 달러 = 680.85원
	https://www.twilio.com/stun-turn/pricing
	
	직접 구축 = 인증키, 포트, 서버부하, 보안


